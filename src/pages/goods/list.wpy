<template>
	<view>
		<refresh-scroll-view>
			<!-- wepy bug: 自定义组件中的 slot 不能是自定义组件 -->
			<view class="goods-list-container" slot="content">
				<repeat for="{{goodsList}}" key="index" index="index" item="item">
					<navigator class="list-item" open-type="navigate" url="/pages/goods/details?id={{item.id}}"
					           hover-class="none">
						<image lazy-load src="{{item.thumbnailUrl}}" mode="widthFix"/>
						<view class="goods-details">
							<view class="name">{{item.name}}</view>
							<view class="price">￥{{item.price}}</view>
							<view class="market-price">￥{{item.marketPrice}}</view>
						</view>
					</navigator>
				</repeat>
			</view>
		</refresh-scroll-view>
	</view>
</template>

<script>
    import wepy from 'wepy'
    import { getGoodList} from '../../services/api/api'
    import GoodsList from '../modules/goods-list'
    import LoadMore from '../../widgets/load-more/index'

    import RefreshScrollViewMixin from '../../mixins/refresh-scroll-view'
    import RefreshScrollView from '../../widgets/refresh-scroll-view/index'

    export default class Index extends wepy.page {
        config = {
            navigationBarTitleText: '首页',
            enablePullDownRefresh: true,
            backgroundColor: '#efefef',
        }
        components = {
            'refresh-scroll-view': RefreshScrollView,
        }
        mixins = [RefreshScrollViewMixin]
        data = {
            goodsList: [],
        }
        methods = {
        }

        async onLoad(options) {
            wx.setNavigationBarTitle({title: options.name || 'list'})
        }

        events = {
            upCallback (page) {
                getGoodList({'pageIndex': page.num, 'pageSize': page.pageSize}).then((result) => {
                    result = result['productItems']
//                    result = []
                    this.$invoke('refresh-scroll-view', 'endSuccess', result.length)
                    this.goodsList = this.goodsList.concat(result)
                    this.$apply()
                }).catch((e) => {
                    this.$invoke('refresh-scroll-view', 'endError')
                })
            },
            downCallback (page) {
                getGoodList({'pageIndex': page.num, 'pageSize': page.pageSize},1000).then((result) => {
                    result = result['productItems']
                    this.$invoke('refresh-scroll-view', 'endRefresh', result.length)
                    this.goodsList = result
                    this.$apply()
                }).catch((e) => {
                    this.$invoke('refresh-scroll-view', 'endRefreshError')
                })
            },
        }
    }
</script>

<style lang="less" rel="stylesheet/less">
	@import "../../assets/styles/goods-item";
	view{
		overflow: hidden;
	}
</style>
