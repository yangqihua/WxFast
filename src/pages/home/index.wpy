<template>
	<view>
		<swiper class="swiper" indicator-active-color="#ff5777" indicator-dots="true"
		        autoplay="true" interval="3000" duration="300" circular="true">
			<repeat for="{{swiperList}}" key="imageUrl" index="index" item="item">
				<swiper-item>
					<image src="{{item.imageUrl}}" mode="widthFix" style="width: 100%" @tap="navigateTo({{item.url}})"/>
				</swiper-item>
			</repeat>
		</swiper>
		<view class="grid-list">
			<repeat for="{{gridList}}" key="url" index="index" item="item">
				<navigator open-type="navigate" url="{{url}}" hover-class="none">
					<image src="{{item.imageUrl}}" class="nav-icon"></image>
					<view class="nav-text">{{item.name}}</view>
				</navigator>
			</repeat>
		</view>

		<view class="goods-container">
			<view class="goods-text">流行单品</view>
			<index-goods :goodsList.sync="goodsList" :scrollTop.sync="scrollTop"/>
			<load-more :loadingStatus.sync="loadingStatus"/>
		</view>
	</view>
</template>

<script>
    import wepy from 'wepy'
    import {getLink, getGoodList} from '../../services/api/api'
    import IndexGoodsList from '../modules/goods-list'
    import LoadMore from '../../widgets/load-more/index'
    export default class Index extends wepy.page {
        config = {
            navigationBarTitleText: '首页',
            navigationBarTextStyle: '#fff',
            navigationBarBackgroundColor: '#ff5777',
            backgroundColor: '#efefef',
            enablePullDownRefresh: true,
        }
        components = {
            'index-goods': IndexGoodsList,
            'load-more': LoadMore,
        }
        data = {
            swiperList: [],
            gridList: [],
            goodsList: [],
            pageIndex: 1,
            pageSize: 10,
            scrollTop: 0,
            loadingStatus: LoadMore.LOADING,
        }
        methods = {
            navigateTo(url){
                wx.navigateTo({url: url})
            }
        }

        async onLoad() {
            this.swiperList = await getLink({diyKey: 'swiper_index'})
            this.gridList = await getLink({diyKey: 'grid_index'})
            this.$apply()
            await this.getGoodsList()
        }

        async getGoodsList(isRefresh = false) {
            let curTime = (new Date()).valueOf();
            let goodsListResult = await getGoodList({'pageIndex': this.pageIndex, 'pageSize': this.pageSize})
            if (goodsListResult.length == 0) {
                this.loadingStatus = LoadMore.NO_MORE
            }else{
                this.loadingStatus = LoadMore.FINISHED
            }
            if (!isRefresh) {
                this.goodsList = [...this.goodsList, ...goodsListResult['productItems']]
                this.pageIndex++
                this.$apply()
            } else {
                wx.showNavigationBarLoading()
                this.goodsList = goodsListResult['productItems']
                this.pageIndex++
                if ((new Date()).valueOf() - curTime > 1500) {
                    this.$apply();
                    wx.hideNavigationBarLoading()
                    wx.stopPullDownRefresh()
                } else {
                    let delay = parseInt(1000 - ((new Date()).valueOf() - curTime));
                    setTimeout(() => {
                        this.$apply();
                        wx.hideNavigationBarLoading()
                        wx.stopPullDownRefresh()
                    }, parseInt(delay))
                }
            }
        }

        async onReachBottom() {
            if (this.loadingStatus == LoadMore.FINISHED) {
                await this.getGoodsList();
            }
        }

        async onPullDownRefresh() {
            await this.getGoodsList(true)
        }

        onPageScroll(e) {
            this.scrollTop = e.scrollTop
        }
    }
</script>

<style lang="less" rel="stylesheet/less">
	@import "../../widgets/common/assets/styles/base";

	.grid-list {
		background-color: #fff;
		color: @title-color;
		display: flex;
		flex-wrap: wrap;
		font-size: @desc-font-size;
		padding: ~'20rpx 19rpx';

		navigator {
			text-align: center;
			padding: ~'20rpx 39rpx';
		}
		.nav-icon {
			height: ~'100rpx';
			width: ~'100rpx';
		}

	}

	.goods-container {
		margin-top: ~'20rpx';
		background: #fff;
		padding-bottom: ~'20rpx';
		.goods-text {
			margin: ~'22rpx 0 12rpx 0';
			padding: ~'4rpx 40rpx';
			line-height: ~'40rpx';
			border-bottom-right-radius: ~'22rpx';
			border-top-right-radius: ~'22rpx';
			font-size: @title-color;
			display: inline-block;
			color: #fff;
			background: linear-gradient(to right, #F39172, #f7701a);
		}
	}
</style>
