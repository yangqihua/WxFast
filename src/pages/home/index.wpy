<template>
	<view>
		<swiper class="swiper" indicator-active-color="#ff5777" indicator-dots="true"
		        autoplay="true" interval="3000" duration="300" circular="true">
			<repeat for="{{swiperList}}" key="imageUrl" index="index" item="item">
				<swiper-item>
					<image src="{{item.imageUrl}}" mode="widthFix" style="width: 100%" @tap="navigateTo({{item.url}})"/>
				</swiper-item>
			</repeat>
		</swiper>
		<view class="grid-list">
			<repeat for="{{gridList}}" key="url" index="index" item="item">
				<navigator open-type="navigate" url="{{url}}" hover-class="none">
					<image src="{{item.imageUrl}}" class="nav-icon"></image>
					<view class="nav-text">{{item.name}}</view>
				</navigator>
			</repeat>
		</view>

		<view class="goods-container">
			<view class="goods-text">流行单品</view>
			<refresh-scroll-view>
				<!-- wepy bug: 自定义组件中的 slot 不能是自定义组件 -->
				<view class="goods-list-container" slot="content">
					<repeat for="{{goodsList}}" key="index" index="index" item="item">
						<navigator class="list-item" open-type="navigate" url="/pages/goods/details?id={{item.id}}"
						           hover-class="none">
							<image lazy-load src="{{item.thumbnailUrl}}" mode="widthFix"/>
							<view class="goods-details">
								<view class="name">{{item.name}}</view>
								<view class="price">￥{{item.price}}</view>
								<view class="market-price">￥{{item.marketPrice}}</view>
							</view>
						</navigator>
					</repeat>
				</view>
			</refresh-scroll-view>
		</view>
	</view>
</template>

<script>
    import wepy from 'wepy'
    import {getLink, getGoodList} from '../../services/api/api'
    import IndexGoodsList from '../modules/goods-list'
    import LoadMore from '../../widgets/load-more/index'

    import RefreshScrollViewMixin from '../../mixins/refresh-scroll-view'
    import RefreshScrollView from '../../widgets/refresh-scroll-view/index'

    export default class Index extends wepy.page {
        config = {
            navigationBarTitleText: '首页',
            navigationBarTextStyle: '#fff',
            navigationBarBackgroundColor: '#ff5777',
            backgroundColor: '#efefef',
            enablePullDownRefresh: true,
        }
        components = {
            'refresh-scroll-view': RefreshScrollView,
        }
        mixins = [RefreshScrollViewMixin]

        data = {
            swiperList: [],
            gridList: [],
            goodsList: [],
            pageIndex: 1,
            pageSize: 10,
            scrollTop: 0,
            loadingStatus: LoadMore.LOADING,
        }
        methods = {
            navigateTo(url){
                wx.navigateTo({url: url})
            }
        }

        async onLoad() {
            this.swiperList = await getLink({diyKey: 'swiper_index'})
            this.gridList = await getLink({diyKey: 'grid_index'})
            this.$apply()
        }

        events = {
            upCallback (page) {
                getGoodList({'pageIndex': page.num, 'pageSize': page.pageSize}).then((result) => {
                    result = result['productItems']
                    this.$invoke('refresh-scroll-view', 'endSuccess', result.length)
                    this.goodsList = this.goodsList.concat(result)
                    this.$apply()
                }).catch((e) => {
                    this.$invoke('refresh-scroll-view', 'endError')
                })
            },
	        downCallback (page) {
                getGoodList({'pageIndex': page.num, 'pageSize': page.pageSize},1000).then((result) => {
                    result = result['productItems']
                    this.$invoke('refresh-scroll-view', 'endRefresh', result.length)
                    this.goodsList = result
                    this.$apply()
                }).catch((e) => {
                    this.$invoke('refresh-scroll-view', 'endRefreshError')
                })
            },
        }
    }
</script>

<style lang="less" rel="stylesheet/less">
	@import "../../assets/styles/goods-item";
	view{
		overflow: hidden;
	}
	.grid-list {
		background-color: #fff;
		color: @title-color;
		display: flex;
		flex-wrap: wrap;
		font-size: @desc-font-size;
		padding: ~'20rpx 19rpx';

		navigator {
			text-align: center;
			padding: ~'20rpx 39rpx';
		}
		.nav-icon {
			height: ~'100rpx';
			width: ~'100rpx';
		}

	}

	.goods-container {
		margin-top: ~'20rpx';
		background: #fff;
		padding-bottom: ~'20rpx';
		.goods-text {
			margin: ~'22rpx 0 12rpx 0';
			padding: ~'4rpx 40rpx';
			line-height: ~'40rpx';
			border-bottom-right-radius: ~'22rpx';
			border-top-right-radius: ~'22rpx';
			font-size: @title-color;
			display: inline-block;
			color: #fff;
			background: linear-gradient(to right, #F39172, #f7701a);
		}
	}
</style>
