<template>
	<view>
		<view id="search_container">
			<search class="search"></search>
			<image src="http://p3orru6vb.bkt.clouddn.com/mesg.png"/>
		</view>
		<view class="classify">
			<scroll-view class="classify-category" scroll-y scroll-with-animation
			             style="height:{{windowHeight-searchViewHeight}}px">
				<view class="name {{item.active? 'active':''}}" wx:for="{{categoryList}}" wx:key="item"
				      @tap="changeCate"
				      data-id="{{item.id}}">
					{{item.name}}
				</view>
			</scroll-view>
			<scroll-view class="classify-detail" scroll-y scroll-with-animation
			             style="height:{{windowHeight-searchViewHeight}}px">
				<view class="children">
					<view class="children-item" wx:for="{{childCateList}}" wx:for-item="item" wx:key="index"
					      @tap="tapCategory({{item.id}})">
						<image class="child-image" src="{{item.icon}}"></image>
						<view class="child-name">{{item.name}}</view>
					</view>
				</view>
			</scroll-view>
		</view>
	</view>
</template>
<script>
    import wepy from 'wepy';
    import Search from '../../widgets/search/index'
    import {getCategoryList} from '../../services/api/api'

    export default class Category extends wepy.page {
        config = {
            navigationBarTitleText: '分类',
            backgroundTextStyle: 'dark',
            backgroundColor: '#EFEFEF',
            navigationBarBackgroundColor: '#ff5777',
            navigationBarTextStyle: '#fff',
        }
        components = {
            'search': Search,
        }
        data = {
            searchViewHeight: 0,
            scrollTop: 100,
            windowHeight: 0,
            categoryList: [],
            childCateList:[],
        }

        getSearchViewHeight() {
            let query = wx.createSelectorQuery()
            query.select('#search_container').boundingClientRect()
            query.exec((res) => {
                this.searchViewHeight = res[0].height
                this.$apply()
            })
        }

        async onLoad() {
            this.getSearchViewHeight()
            let systemInfo = this.$parent.getSystemInfoSync()
            this.windowHeight = systemInfo.windowHeight;

            this.categoryList = await getCategoryList(null)
            if (this.categoryList.length > 0) {
                this.categoryList[0]['active'] = true
                this.childCateList = this.categoryList[0]['childClass']
            }
            this.$apply()
        }

        methods = {
            changeCate(e) {
                let id = e.currentTarget.dataset.id;
                for (let i = 0; i < this.categoryList.length; i++) {
                    this.categoryList[i]['active'] = false;
                    if (this.categoryList[i].id == id) {
                        this.categoryList[i]['active'] = true
                        this.childCateList = this.categoryList[i]['childClass']
                        this.$apply()
                    }
                }
            },
            tapCategory(id){
                console.log('id:', id)
            }
        }

        events = {
            doTap(){
                console.log('hear is do tap method from parent')
            }
        }
    }

</script>
<style lang="less" rel="stylesheet/less">
	@import "../../widgets/common/assets/styles/base";

	#search_container {
		display: flex;
		padding: ~'16rpx 10rpx 16rpx 30rpx';
		background-color: #f0f0f0;
		box-sizing: border-box;
		border-bottom: 1px solid @hairline-color;
		image {
			padding: ~'1rpx 20rpx';
			width: ~'60rpx';
			height: ~'60rpx';
		}
	}

	.classify {
		display: flex;
		position: relative;
		.classify-category {
			width: ~'216rpx';
			position: relative;
			z-index: 1;
			background-color: #f5f5f5;
			.name {
				text-align: center;
				height: ~'90rpx';
				line-height: ~'90rpx';
				font-size: @title-font-size;
				color: @desc-color;
				overflow: hidden;
				white-space: nowrap;
				text-overflow: ellipsis;
			}
			.active {
				border-left: ~'4rpx' solid @active-color;
				background: #fff;
				color: @active-color;
				font-weight: bold;
			}
		}
		.classify-detail {
			position: relative;
			z-index: 999;
			box-sizing: border-box;
			background: #fff;
			.children {
				display: flex;
				flex-wrap: wrap;
				margin: ~'20rpx' 0;
				padding: ~'20rpx 20rpx 0 20rpx';
			}
			.children-item {
				height: ~'200rpx';
				width: ~'178rpx';
				text-align: center;
			}
			.child-image {
				width: ~'120rpx';
				height: ~'120rpx';
			}
			.child-name {
				font-size: @desc-font-size;
				color: @desc-color;
				white-space: nowrap;
				overflow: hidden;
				text-overflow: ellipsis;
				width: ~'178rpx';
			}

		}
	}

</style>
