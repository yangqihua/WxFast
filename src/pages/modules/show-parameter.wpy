<template>
	<view>
		<view>
			<view class="cell cell-access" @tap="takeOrder">
				<view class="cell-body">{{salePropertyTitle}}</view>
				<view class="cell-right">{{selectSku.propertyValueDesc}}</view>
			</view>

			<view class="cell cell-access" @tap="showParameter">
				<view class="cell-body">商品参数</view>
				<view class="cell-right">查看</view>
			</view>
		</view>
		<view class="over-model" wx:if="{{!hidden}}" @tap="closeAllModel"></view>

		<view class="panel-model" animation="{{saleAnimationData}}">
			<view class="model-content">
				<view class="head-box" id="sale-header-id">
					<image class="goods-img" mode="widthFix" src="{{productView.thumbnailUrl}}"/>
					<view class="product-wrap">
						<view class="product-name">{{productView.name}}</view>
						<view class="price-container">
							<view class="price">{{productView.displayPrice}}</view>
							<view class="market-price">￥{{productView.marketPrice}}</view>
						</view>
						<view class="modal-spec">
							库存：{{selectSku.stock}} 货号：{{selectSku.bn}}
						</view>
					</view>
				</view>
				<scroll-view scroll-y="true" style="height:{{saleScrollViewHeight}}">
					<repeat for="{{salePropertys}}" key="index" index="index" item="salePropertyItem">
						<view class="rule-box">
							<view class="title">{{salePropertyItem.name}}</view>
							<view class="items">
								<repeat for="{{salePropertyItem.propertyValues}}" key="index" index="index"
								        item="propertyValueItem">
									<view @tap="selAttr" class="item {{propertyValueItem.active?'active':''}}"
									      data-id="{{propertyValueItem.id}}">
										{{propertyValueItem.valueAlias}}
									</view>
								</repeat>
							</view>
						</view>
					</repeat>
					<view class="num-box">
						<view class="title">数量</view>
						<view class="buy-num">
							<view class="jian-btn {{buyCount<2? 'disabled' : ''}}" catchtap="jianBtnTap">-</view>
							<input type="number" bindinput="bindBuyCountInput" value="{{buyCount}}"/>
							<view class="jia-btn {{buyCount>99? 'disabled' : ''}}" catchtap="jiaBtnTap">+</view>
						</view>
					</view>
				</scroll-view>
				<view class="close-model" @tap="closeSaleModel"><i class="iconfont icon-close"></i></view>
			</view>
			<view class="confirm-btn" id="sale-footer-id">
				<view class="cart-btn" @tap="doCart">加入购物车</view>
				<view class="order-btn" @tap="doOrder">立即购买</view>
			</view>
		</view>

		<view class="panel-model" id="parameter-id" animation="{{parameterAnimationData}}">
			<view class="panel-title" style="padding-bottom: 20rpx;">商品参数</view>
			<scroll-view scroll-y="true" style="height:{{parameterScrollViewHeight}};">
				<view class="panel">
					<repeat for="{{displayPropertys}}" key="index" index="index" item="propItem">
						<view class="cell">
							<view class="cell-body">{{propItem.name}}</view>
							<view class="cell-right">{{propItem.displayValue}}</view>
						</view>
					</repeat>
				</view>
			</scroll-view>
			<view class="confirm-btn" style="padding:10rpx 0rpx">
				<view class="confirm-parameter" @tap="closeParameterModel">完成</view>
			</view>
		</view>
	</view>
</template>

<script>
    import wepy from 'wepy';
    import * as utils from '../../widgets/common/js/utils'
    export default class ShowParameter extends wepy.component {
        props = {
            productView: {
                type: Object,
                default: {},
            },
        }
        data = {
            saleAnimation: null,
            saleAnimationData: null,
            parameterAnimation: null,
            parameterAnimationData: null,
            hidden: true,
            systemInfo: {
                windowWidth: 0,
                windowHeight: 0,
            },
            parameterScrollViewHeight: 0,
            saleScrollViewHeight: 0,

            showParameter: false, // 是否显示商品参数窗口
            showSale: false, // 显示规格选择窗口
            salePropertyTitle: '请选择：',
            // 选择的商品Sku
            selectSku: {
                propertyValueDesc: '',
            },
            displayPropertys: [],
            salePropertys: [],
            activeProductCategory: [],

            buyCount: 10, // 商品购买数量
            saleItems: [] // 可能存在多个商品规格属性，默认填充四个
        }

        async onLoad() {
            this.saleAnimation = utils.createAnimation('ease')
            this.parameterAnimation = utils.createAnimation('ease')
            this.systemInfo = this.$root.$parent.getSystemInfoSync()
            this.setParameterScrollViewHeight()
            await this.setSaleScrollViewHeight()
            this.showConfirmData()
        }

        methods = {
            bindBuyCountInput(e){
                let value = e.detail.value;
                if (value && value > 1) {
                    this.buyCount = value
                    this.$apply()
                }
            },
            jiaBtnTap(){
                if (this.buyCount > 99) {
                    return
                }
                this.buyCount = this.buyCount + 1;
            },
            jianBtnTap(){
                if (this.buyCount < 2) {
                    return
                }
                this.buyCount = this.buyCount - 1;
            },
            selAttr(event){
                let id = event.currentTarget.dataset.id;
                let activeItem = {}
                let flag = false
                for (let i = 0; i < this.salePropertys.length; i++) {
                    let items = this.salePropertys[i]['propertyValues']
                    for (let j = 0; j < items.length; j++) {
                        if (items[j]['id'] == id) {
                            this.salePropertys[i]['propertyValues'][j]['active'] = true

                            for (let k = 0; k < items.length; k++) {
                                if (items[k]['id'] != id) {
                                    this.salePropertys[i]['propertyValues'][k]['active'] = false
                                }
                            }

                            for (let n = 0; n < this.activeProductCategory.length; n++) {
                                if (this.activeProductCategory[n]['categoryId'] == this.salePropertys[i]['id']) {
                                    this.activeProductCategory.splice(n, 1)
                                }
                            }
                            activeItem['categoryId'] = this.salePropertys[i]['id']
                            activeItem['propId'] = items[j]['id']
                            this.activeProductCategory.push(activeItem)
                        }
                    }
                    this.$apply()
                }
            },
            takeOrder(){
                this.showConfirmData();
            },
            doCart(){

            },
            doOrder(){

            },
            showParameter(){
                this.showParameterModal()
            },
            closeAllModel(){
                this.saleAnimation.height(0).step();
                this.saleAnimationData = this.saleAnimation.export()

                this.parameterAnimation.height(0).step();
                this.parameterAnimationData = this.parameterAnimation.export()

                this.hidden = true;
                this.$apply();
            },
            closeSaleModel(){
                this.saleAnimation.height(0).step();
                this.saleAnimationData = this.saleAnimation.export()
                this.hidden = true;
                this.$apply();
            },
            closeParameterModel(){
                this.parameterAnimation.height(0).step();
                this.parameterAnimationData = this.parameterAnimation.export()
                this.hidden = true;
                this.$apply();
            }
        }

        showParameterModal() {
            let height = this.systemInfo.windowHeight * 0.85;
            this.parameterAnimation.height(height + 'px').step();
            this.parameterAnimationData = this.parameterAnimation.export()
            this.hidden = false;
            this.$apply();
        }

        showConfirmData() {
            let height = this.systemInfo.windowHeight * 0.8;
            this.saleAnimation.height(height + 'px').step();
            this.saleAnimationData = this.saleAnimation.export()
            this.hidden = false;
            this.$apply();
        }

        setParameterScrollViewHeight() {
            let headerHeight = '88'
            let footerHeight = '100'
            this.parameterScrollViewHeight = utils.pxTorpx(this.systemInfo.windowHeight * 0.85) - headerHeight - footerHeight + 'rpx';
            this.$apply()
        }

        async setSaleScrollViewHeight() {
            let headerHeight = await utils.getDomHeight('#sale-footer-id')
            let footerHeight = await utils.getDomHeight('#sale-header-id')
            this.saleScrollViewHeight = utils.pxTorpx(this.systemInfo.windowHeight * 0.8) - headerHeight - footerHeight + 'rpx'
            this.$apply()
        }

        watch = {
            productView(newValue){
                this.displayPropertys = newValue.productExtensions.productCategory.displayPropertys
                this.salePropertys = newValue.productExtensions.productCategory.salePropertys
                newValue.productExtensions.productCategory.salePropertys.forEach(element => {
                    this.salePropertyTitle = this.salePropertyTitle + element.name + ' '
                })
                this.selectSku = newValue.productExtensions.productSkus[0] // 根据specSn获取商品的规格
                this.$apply()
            },
        }
    }
</script>

<style lang="less" rel="stylesheet/less">
	@import "../../widgets/cell/cell";
	@import "../../widgets/panel/panel";

	.over-model {
		position: fixed;
		background: rgba(0, 0, 0, 0.5);
		z-index: 999;
		width: 100%;
		height: 100%;
		top: 0;
	}

	.panel-model {
		position: fixed;
		height: 0;
		width: 100%;
		z-index: 1002;
		background: #fff;
		bottom: 0;
	}

	.model-content {
		padding: ~'20rpx';
		position: relative;
	}

	.head-box {
		display: flex;
		align-items: center;
		border-bottom: 1px solid @hairline-color;
		padding-bottom: ~'20rpx';
		box-sizing: border-box;
		.goods-img {
			height: ~'200rpx';
			width: ~'200rpx';
		}

		.product-wrap {
			padding: ~'0 20rpx';
		}
		.product-name {
			color: @title-color;
			font-size: @desc-font-size;
		}
		.price-container {
			padding-top: ~'6rpx';
			line-height: ~'32rpx';
		}
		.price {
			color: @active-color;
			font-size: ~'30rpx';
			padding-right: ~'12rpx';
			display: inline-block;
		}
		.market-price {
			display: inline-block;
			font-size: @desc-font-size;
			color: @hint-color;
			text-decoration: line-through;
		}
		.modal-spec {
			color: @desc-color;
			font-size: @desc-font-size;
		}

	}

	.close-model {
		position: absolute;
		right: ~'8rpx';
		top: ~'0rpx';
		.icon-close {
			color: @theme-color;
			font-size: @big-font-size;
		}

	}

	.confirm-btn {
		padding-bottom: ~'20rpx';
		line-height: ~'80rpx';
		width: 100%;
		text-align: center;
		font-size: @title-font-size;
		color: #fff;
		position: absolute;
		bottom: 0;
		z-index: 10003;
		display: flex;
		.cart-btn {
			flex: 1;
			margin-left: ~'20rpx';
			background: #ff6e30;
			border-bottom-left-radius: ~'40rpx';
			border-top-left-radius: ~'40rpx';
		}
		.order-btn {
			flex: 1;
			margin-right: ~'20rpx';
			background: @active-color;
			border-bottom-right-radius: ~'40rpx';
			border-top-right-radius: ~'40rpx';
		}
	}

	.confirm-parameter {
		margin: 0 ~'20rpx';
		flex: 1;
		border-radius: ~'40rpx';
		background: linear-gradient(to right, #F39172, #f7701a);;
	}

	.rule-box {
		border-bottom: 1px solid @hairline-color;
		padding-bottom: ~'26rpx';

		.title {
			color: @desc-color;
			font-size: @title-font-size;
			margin-top: ~'10rpx';
		}
		.items {
			display: flex;
			flex-wrap: wrap;
			margin-top: ~'5rpx';
			margin-left: ~'-20rpx';
		}

		.item {
			padding: ~'15rpx 28rpx';
			background: #e6e6e6;
			color: #000;
			margin-left: ~'20rpx';
			margin-top: ~'10rpx';
			border-radius: ~'10rpx';
		}

		.active {
			background: @active-color;
			color: #fff;
		}

	}

	.num-box {
		display: flex;
		justify-content: space-between;
		padding: ~'20rpx 0rpx';
		.title {
			color: @desc-color;
			font-size: @title-font-size;
			margin-top: ~'10rpx';
		}

	}

	.buy-num {
		width: ~'240rpx';
		height: ~'52rpx';
		line-height: ~'52rpx';
		display: flex;
		font-size: ~'26rpx';
		text-align: center;
		border: ~'1rpx' solid #ccc;
		border-radius: ~'6rpx';
		color: @active-color;
		.jian-btn {
			flex: 1;
			width: ~'52rpx';
			height: 100%;
		}

		.jian-btn.disabled {
			background-color: #f5f5f9;
			color: #ccc;
		}

		.jia-btn {
			flex: 1;
			width: ~'52rpx';
			height: 100%;
		}

		.jia-btn.disabled {
			background-color: #f5f5f9;
			color: #ccc;
		}

		input {
			color: @title-color;
			width: ~'100rpx';
			height: ~'52rpx';
			min-height: ~'52rpx';
			text-align: center;
			font-size: ~'26rpx';
			border-left: ~'1rpx' solid #ccc;
			border-right: ~'1rpx' solid #ccc;
		}

	}

	.button-more-cmment {
		font-size: ~'28rpx';
		height: ~'55rpx';
		line-height: ~'55rpx';
		text-align: center;
		margin: ~'20rpx auto';
		width: ~'200rpx';
		border-radius: ~'10rpx';
		color: #ff4856;
		border: 1px solid #ff4856;
	}
</style>
